- hosts: "{{ targetgroup }}"
  vars_files:
    - ./vars/main.yml
  vars:
    composer_settings: "{{ lookup('file','../app/api/composer.json') | from_json }}"
  roles:
    - { role: 'repo-epel', tags: ["build","deploy"] }
    - { role: 'repo-remi', tags: ["build","deploy"] }
    - { role: 'nodejs', tags: ["build"] }
    - { role: 'php_upgrade', tags: ["build","deploy"] }
    - { role: 'git', tags: ["build"] }
    - { role: 'composer', tags: ["build"] }
    - { role: 'gems-fpm', tags: ["build"] }
    - { role: 'nginx', tags: ["deploy"] }
    - { role: 'certtool', tags: ["deploy"] }
  tasks:
    - name: Create rpms folder
      file: path=../rpms state=directory mode=0755
      tags:
        - keystash
    - name: Build keystash RPM
      shell: "fpm -s dir -t rpm -n 'ansible-vault-usf' -v '1.0.0' -p ../rpms {{ keystash }}={{ keystash }}"
      tags:
        - keystash        
    - name: Enable remi and remi-56 repo
      ini_file:
        dest: "/etc/yum.repos.d/{{ item.file }}"
        section: "{{ item.section }}"
        option: enabled
        value: 1
      with_items:
        - { file: 'remi.repo', section: 'remi-php56' }    
      tags:
        - build
        - deploy
    - name: Update php
      yum:
        name: '*'
        state: latest   
      tags:
        - build
        - deploy
    - name: Add phar.readonly to php.ini
      ini_file:
        dest: /etc/php.ini
        section: Phar
        option: phar.readonly
        value: Off
      tags:
        - build
        - deploy
    - name: Copy over composer settings to vagrant user
      shell: "cp -r /root/.composer /home/vagrant/"
      tags:
        - build
    - name: Update composer dependencies for Security Awareness Quiz
      composer:
        command: "{{ item }}"
        working_dir: "/vagrant/app/api"
      become: yes
      become_user: "{{ remote_user }}"   
      with_items:
        - install
        - update
      tags:
        - build
    - name: Build the package
      shell: "{{ item }}"
      become: yes
      become_user: "{{ remote_user }}"   
      args:
        chdir: "/vagrant"
      register: result
      with_items:
        - "npm cache clean"
        - "npm prune"
        - "npm install --ignore-scripts"
        - "node_modules/bower/bin/bower install"
        - "node_modules/grunt-cli/bin/grunt dist"
        - "node_modules/grunt-cli/bin/grunt shell:for_centos7 --iteration={{ package_revision }}"
      tags:
        - build
    - name: Install Security Awareness RPM
      yum:
        name: "{{ item }}"
        state: present
      with_fileglob:
        - "../rpms/SecAwarenessQuiz*.rpm"
      tags:
        - deploy        
    ### nginx configuration
    - name: remove the default nginx configuration
      file: path=/etc/nginx/sites-enabled/default.conf state=absent
      tags: 
        - deploy
    - name: create image service config dir
      file: path=/etc/nginx/sites-enabled
            state=directory
            mode=0755
      tags: 
        - deploy
    - name: create nginx config for SAQ
      template:
        src="../templates/nginx/saq.conf.j2"
        dest=/etc/nginx/sites-available/saq.conf
        mode=0644
        backup=no
      tags: 
        - deploy
    - file: path=/etc/nginx/sites-enabled/saq.conf
            src=/etc/nginx/sites-available/saq.conf
            state=link
            force=yes
      tags: 
        - deploy
    - name: remove the default php-fpm configuration pool
      file: 
        path: /etc/php-fpm.d/www.conf
        state: absent
      tags: 
        - deploy
    #### Configure PHP-FPM and nginx
    - name: create PHP-FPM config for saq
      template: 
        src: ../templates/php-fpm/saq.conf.j2
        dest: /etc/php-fpm.d/saq.conf
        group: root
        owner: root
        mode: 0644
        backup: no
      tags: 
        - deploy
    - name: Enable and start both nginx and php-fpm
      service:
        name: "{{ item}}
        enabled: yes
        state: restarted
      with_items:
        - nginx
        - php-fpm
      tags: 
        - deploy

        